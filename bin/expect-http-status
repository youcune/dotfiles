#!/usr/bin/env ruby
# --------------------------------------------------------------------
# expect-http-status v0.2
# @youcune
# 
# v0.2 2014.07.10 Ruby 1.8 系でのエラーハンドリングを考慮
# v0.3 2014.12.19 HTTPS を考慮
# --------------------------------------------------------------------
Version = 'v0.3'

def show_usage
  puts 'Usage: expect-http-status <URI> [<STATUS>]'
  puts '    HEAD <URI> and check if HTTP status equals to <STATUS>.'
  puts '    <URI>    : URL to check'
  puts '    <STATUS> : expected HTTP status, default 200'
  exit
end

def show_error(message)
  STDERR.puts message
  exit -1
end

show_usage if ARGV.size == 0 || ARGV[0] =~ /\A--?h/

require 'net/https'
require 'openssl'
require 'uri'

OPEN_TIMEOUT = 10
READ_TIMEOUT = 10

uri = URI.parse(ARGV[0]) rescue show_error('Failed parsing URI!')
expected = (ARGV[1] || 200).to_s

exitcode = 0

begin
  http = Net::HTTP.new(uri.host, uri.port)
  if uri.scheme == 'https'
    http.use_ssl = true
    http.verify_mode = OpenSSL::SSL::VERIFY_NONE
  end
  http.open_timeout = OPEN_TIMEOUT
  http.read_timeout = READ_TIMEOUT
  http.start { |http|
    response = http.head(uri.path)
    if response.code == expected
      printto  = STDOUT
    else
      exitcode = 1
      printto  = STDERR
    end
    printto.puts "[#{response.code}] #{uri.to_s}"
  }
rescue Exception => e
  show_error("[#{e.class.to_s}] #{uri.to_s} #{e.message}")
end

exit exitcode

